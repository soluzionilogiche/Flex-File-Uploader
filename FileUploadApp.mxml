<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:com="com.flashdev.file.*"
				creationComplete="initVars()"
				>
	
	<fx:Metadata>
		[ResourceBundle("Strings")]
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			import com.demonsters.debugger.MonsterDebugger;
			
			import it.soloict.VersionControl;
			
			import mx.controls.Alert;
			
			[Bindable]
			private var _strUploadScript:String = null;
			[Bindable]
			private var _strUploadFieldName:String = null;
			[Bindable]
			private var _strUploadCompleteJSCallback:String = null;
			[Bindable]
			private var _boolMonsterDebug:Boolean = false;
			
			private function initVars():void {
				_strUploadScript				= this.parameters.uploadScript;
				_strUploadFieldName				= this.parameters.uploadFieldName;
				_strUploadCompleteJSCallback	= this.parameters.uploadCompleteJSCallback;
				_boolMonsterDebug				= this.parameters.monsterDebug;
				
				if(_boolMonsterDebug) MonsterDebugger.initialize(this);
				
				VersionControl.getInstance(this);
				
				MonsterDebugger.trace('Capabilities.language', Capabilities.language);
				MonsterDebugger.trace('creationComplete parameter uploadScript', _strUploadScript);
				MonsterDebugger.trace('creationComplete parameter uploadFieldName', _strUploadFieldName);
				MonsterDebugger.trace('creationComplete parameter uploadCompleteJSCallback', _strUploadCompleteJSCallback);
				MonsterDebugger.trace('creationComplete parameter monsterDebug', _boolMonsterDebug);
			}
		]]>
	</fx:Script>
	
	<s:Group width="400" height="300" horizontalCenter="0" verticalCenter="0">
		<com:FileUpload skinClass="skins.FileUploadSkin"
			width="100%" height="100%"
			uploadUrl="{_strUploadScript}"
			uploadFieldName="{_strUploadFieldName}"
			uploadCompleteJSCallback="{_strUploadCompleteJSCallback}"
			uploadComplete="Alert.show(resourceManager.getString('Strings', 'uploadComplete_text'), resourceManager.getString('Strings', 'uploadComplete_title'))" 
			uploadIOError="Alert.show(resourceManager.getString('Strings', 'uploadIOError_text'), resourceManager.getString('Strings', 'uploadIOError_title'))" 
			uploadSecurityError="Alert.show(resourceManager.getString('Strings', 'uploadSecurityError_text'), resourceManager.getString('Strings', 'uploadSecurityError_title'))"
			uploadStatusError="Alert.show(resourceManager.getString('Strings', 'uploadStatusError_text'), resourceManager.getString('Strings', 'uploadStatusError_title'))"
		/>
	</s:Group>
</s:Application>